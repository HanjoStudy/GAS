// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Kast
double Kast(double dX);
RcppExport SEXP GAS_Kast(SEXP dXSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    __result = Rcpp::wrap(Kast(dX));
    return __result;
END_RCPP
}
// ddist_univ
double ddist_univ(double dY, arma::vec vTheta, std::string Dist, bool bLog);
RcppExport SEXP GAS_ddist_univ(SEXP dYSEXP, SEXP vThetaSEXP, SEXP DistSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    __result = Rcpp::wrap(ddist_univ(dY, vTheta, Dist, bLog));
    return __result;
END_RCPP
}
// rdist_univ
double rdist_univ(arma::vec vTheta, std::string Dist);
RcppExport SEXP GAS_rdist_univ(SEXP vThetaSEXP, SEXP DistSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    __result = Rcpp::wrap(rdist_univ(vTheta, Dist));
    return __result;
END_RCPP
}
// GASFilter_univ
List GASFilter_univ(arma::vec vY, arma::vec vKappa, arma::mat mA, arma::mat mB, int iT, int iK, std::string Dist, std::string ScalingType);
RcppExport SEXP GAS_GASFilter_univ(SEXP vYSEXP, SEXP vKappaSEXP, SEXP mASEXP, SEXP mBSEXP, SEXP iTSEXP, SEXP iKSEXP, SEXP DistSEXP, SEXP ScalingTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vKappa(vKappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mA(mASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mB(mBSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< std::string >::type ScalingType(ScalingTypeSEXP);
    __result = Rcpp::wrap(GASFilter_univ(vY, vKappa, mA, mB, iT, iK, Dist, ScalingType));
    return __result;
END_RCPP
}
// IM_univ
arma::mat IM_univ(arma::vec vTheta, std::string Dist);
RcppExport SEXP GAS_IM_univ(SEXP vThetaSEXP, SEXP DistSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    __result = Rcpp::wrap(IM_univ(vTheta, Dist));
    return __result;
END_RCPP
}
// Map_Vec
arma::vec Map_Vec(arma::vec vX, double dL, double dU);
RcppExport SEXP GAS_Map_Vec(SEXP vXSEXP, SEXP dLSEXP, SEXP dUSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< double >::type dL(dLSEXP);
    Rcpp::traits::input_parameter< double >::type dU(dUSEXP);
    __result = Rcpp::wrap(Map_Vec(vX, dL, dU));
    return __result;
END_RCPP
}
// unmapVec_C
arma::vec unmapVec_C(arma::vec vG, double dL, double dU);
RcppExport SEXP GAS_unmapVec_C(SEXP vGSEXP, SEXP dLSEXP, SEXP dUSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vG(vGSEXP);
    Rcpp::traits::input_parameter< double >::type dL(dLSEXP);
    Rcpp::traits::input_parameter< double >::type dU(dUSEXP);
    __result = Rcpp::wrap(unmapVec_C(vG, dL, dU));
    return __result;
END_RCPP
}
// MapParameters
arma::vec MapParameters(arma::vec vTheta_tilde, std::string Dist, int iK);
RcppExport SEXP GAS_MapParameters(SEXP vTheta_tildeSEXP, SEXP DistSEXP, SEXP iKSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta_tilde(vTheta_tildeSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    __result = Rcpp::wrap(MapParameters(vTheta_tilde, Dist, iK));
    return __result;
END_RCPP
}
// UnmapParameters
arma::vec UnmapParameters(arma::vec vTheta, std::string Dist, int iK);
RcppExport SEXP GAS_UnmapParameters(SEXP vThetaSEXP, SEXP DistSEXP, SEXP iKSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    __result = Rcpp::wrap(UnmapParameters(vTheta, Dist, iK));
    return __result;
END_RCPP
}
// StaticLLK_Univ
double StaticLLK_Univ(arma::vec vY, arma::vec vTheta, int iT, std::string Dist);
RcppExport SEXP GAS_StaticLLK_Univ(SEXP vYSEXP, SEXP vThetaSEXP, SEXP iTSEXP, SEXP DistSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    __result = Rcpp::wrap(StaticLLK_Univ(vY, vTheta, iT, Dist));
    return __result;
END_RCPP
}
// Score_univ
arma::vec Score_univ(double dY, arma::vec vTheta, std::string dist);
RcppExport SEXP GAS_Score_univ(SEXP dYSEXP, SEXP vThetaSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type dist(distSEXP);
    __result = Rcpp::wrap(Score_univ(dY, vTheta, dist));
    return __result;
END_RCPP
}
// SimulateGAS_univ
List SimulateGAS_univ(int iT, arma::vec vKappa, arma::mat mA, arma::mat mB, std::string Dist, std::string ScalingType);
RcppExport SEXP GAS_SimulateGAS_univ(SEXP iTSEXP, SEXP vKappaSEXP, SEXP mASEXP, SEXP mBSEXP, SEXP DistSEXP, SEXP ScalingTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vKappa(vKappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mA(mASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mB(mBSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< std::string >::type ScalingType(ScalingTypeSEXP);
    __result = Rcpp::wrap(SimulateGAS_univ(iT, vKappa, mA, mB, Dist, ScalingType));
    return __result;
END_RCPP
}
// NumberParameters
int NumberParameters(std::string Dist);
RcppExport SEXP GAS_NumberParameters(SEXP DistSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    __result = Rcpp::wrap(NumberParameters(Dist));
    return __result;
END_RCPP
}
